# This is a basic workflow to help you get started with Actions

name: StartWorkSpace

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildVm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Trigger Terraform
        run: | 
          ./trigger-terraform-run.ps1 -workspaceId 'ws-a6rZT4WRauF45abw' -token ${{ secrets.TERRAFORM_TOKEN }} -triggerMessage "From ${{ github.job }}"
        shell: pwsh  
  prepVm:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          inlineScript: |
                #Credentials
                $passwd = ConvertTo-SecureString ${{ secrets.ARM_CLIENT_SECRET }} -AsPlainText -Force
                $pscredential = New-Object System.Management.Automation.PSCredential('34c7d886-2a8c-4637-aa56-7b6690c5c835', $passwd)
                Connect-AzAccount -ServicePrincipal -Credential $pscredential -Tenant ${{ secrets.ARM_TENANT_ID }} -Subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}
          azPSVersion: latest
        # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: 'stop'
      # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          inlineScript: |
                function test-VMstatus($virtualMachineName) {
                  $vmStatus = Get-AzVM -name $virtualMachineName -Status
                  "$virtualMachineName status " + $vmstatus.PowerState
                }

                $virtualMachineName = "vm-init"
                $vm = get-azvm -name $virtualMachineName
                $vm | Invoke-AzVMRunCommand -CommandId 'RunPowerShellScript' -ScriptPath .\sysprep.ps1
                Write-Output "$virtualMachineName is going to be generalized, waiting till vm is stopped"
                do {
                    $status = test-vmStatus -virtualMachineName $virtualMachineName
                    $status
                    Start-Sleep 10
                } until ( $status -match "stopped")
                Write-Output "$virtualMachineName has status $status"
                $vm | Set-AzVm -Generalized
          azPSVersion: latest
        # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: 'stop'
  buildAVD:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Trigger Terraform
        run: | 
          ./trigger-terraform-run.ps1 -workspaceId 'ws-xAJ3c69Kf5k13T3w' -token ${{ secrets.TERRAFORM_TOKEN }} -triggerMessage "From ${{ github.job }}"
        shell: pwsh  
      