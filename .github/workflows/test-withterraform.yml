# This is a basic workflow to help you get started with Actions

name: StartWorkSpace

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: |
                $workspaceId = "ws-a6rZT4WRauF45abw"
                $body = @{
                    data = @{
                        attributes    = @{
                            message      = "From PowerShell"
                            "auto-apply" = $true
                        }
                        type          = "runs"
                        relationships = @{
                            workspace = @{
                                data = @{
                                    type = "workspaces"
                                    id   = $workspaceId
                                }
                            }
                        }
                    }
                }
                $jsonBody = $body | ConvertTo-Json -Depth 5
                $token = "${{ secrets.terraform_token }}"
                $header = @{
                    Authorization  = "Bearer $token"
                    "Content-Type" = "application/vnd.api+json"
                }
                $parameters = @{
                    header = $header
                    method = "POST"
                    body   = $jsonBody
                }
                # Start to run the workspace
                $runUrl = "https://app.terraform.io/api/v2/runs/"
                $runData = (Invoke-RestMethod -Uri $runUrl @parameters).data
                # Check for current run status
                $runDataUrl = $runUrl+ $runData.id
                $status = (Invoke-RestMethod -Uri $runDataUrl -Headers $header -Method GET).data.attributes.status
                do {
                    $status = (Invoke-RestMethod -Uri $runDataUrl -Headers $header -Method GET).data.attributes.status
                    $status
                }
                while ($status -ne 'applied')
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest
          # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: 'stop'
          # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.

